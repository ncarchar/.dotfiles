#!/usr/bin/env bash

BACKUPS_DIR="$HOME/.local/share/trash/backups"
TRASH_DIR="$HOME/.local/share/trash/store"
LOG_FILE="$HOME/.local/share/trash/trash.log"
TEMP_LOG="$HOME/.local/share/trash/.trash.tmp"

all_flag=""

if [[ "$1" == "--all" ]]; then
    all_flag="--all"
fi

if [[ ! -s "$LOG_FILE" ]]; then
    echo "Trash is empty."
    exit 1
fi

selected_files=$(trash-list $all_flag |
    fzf --border --multi --ansi --height 40% \
        --preview "if [ -d $TRASH_DIR/{6} ]; then exa --icons --tree --level=1 --git --git-ignore --no-user --no-permissions --group-directories-first $TRASH_DIR/{6}; else cat $TRASH_DIR/{6}; fi" \
        --prompt="Restore: ")

if [[ -z "$selected_files" ]]; then
    echo "No file selected."
    exit 1
fi

restored_files=()
restored_paths=()

while IFS= read -r selection; do
    if [[ -z "$selection" ]]; then
        continue
    fi
    if [[ "$selection" == "esc" ]]; then
        exit 0
    fi
    original_path=$(echo "$selection" | sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} \([^)]+\) +([^ ]+) →.*/\1/')
    trash_filename=$(echo "$selection" | sed -E 's/.*→ *([^ ]+)$/\1/')
    if [[ ! -e "$TRASH_DIR/$trash_filename" ]]; then
        echo "Error: File '$trash_filename' not found in trash!"
        continue
    fi
    rsync -a --backup --backup-dir="$BACKUPS_DIR/$trash_filename/" "$TRASH_DIR/$trash_filename/" "$original_path"
    restored_files+=("$trash_filename")
    restored_paths+=("$original_path")
done <<<"$selected_files"

if [[ ${#restored_files[@]} -gt 0 ]]; then
    pattern=$(printf "|%s" "${restored_files[@]}")
    pattern=${pattern:1}
    awk -F, -v pattern="$pattern" '$2 !~ pattern' "$LOG_FILE" >"$TEMP_LOG"
    mv "$TEMP_LOG" "$LOG_FILE"

    echo -e "Restored ${#restored_files[@]} files successfully:"
    printf '\t%s\n' "${restored_paths[@]}"
fi
